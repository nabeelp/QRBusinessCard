@page "/"
@using Google.Apis.Walletobjects.v1.Data
@using QRBusinessCard.Models
@using QRBusinessCard.Services
@inject QRCodeService QRCodeService
@rendermode InteractiveServer

<PageTitle>Business Card Generator</PageTitle>

<section class="hero">
    <div class="hero-body">
        <div class="container content">
            <div class="columns">
                <div class="column is-half is-offset-one-quarter">
                    <h1 class="has-text-centered">
                        Business Card Generator
                    </h1>

                    <p class="has-text-centered">
                        Generate a digital business card in QR Code format.
                    </p>

                    <hr>

                    @if (!string.IsNullOrEmpty(errorMessage))
                    {
                        <div class="notification is-danger is-light mb-t mt-2">
                            <button class="delete" @onclick="ClearError"></button>
                            @errorMessage
                        </div>
                    }
                    <div class="field is-horizontal">
                        <div class="field-label is-normal">
                            <label class="label">Profile</label>
                        </div>
                        <div class="field-body">
                            <div class="field">
                                <div class="control has-icons-left">
                                    <input class="input" type="text" placeholder="First Name" name="firstname"
                                        @bind="contactInfo.FirstName">
                                    <span class="icon is-small is-left">
                                        <img src="icons/user.svg">
                                    </span>
                                </div>
                            </div>

                            <div class="field">
                                <div class="control has-icons-left">
                                    <input class="input" type="text" placeholder="Last Name" name="lastname"
                                        @bind="contactInfo.LastName">
                                    <span class="icon is-small is-left">
                                        <img src="icons/user.svg">
                                    </span>
                                </div>
                            </div>

                        </div>
                    </div>

                    <div class="field is-horizontal">
                        <div class="field-label is-normal">
                            <label class="label">Business</label>
                        </div>
                        <div class="field-body">
                            <div class="field">
                                <div class="control has-icons-left">
                                    <input class="input" type="text" placeholder="Company" name="company"
                                        @bind="contactInfo.Company">
                                    <span class="icon is-small is-left">
                                        <img src="icons/building.svg">
                                    </span>
                                </div>
                            </div>

                            <div class="field">
                                <div class="control has-icons-left">
                                    <input class="input" type="text" placeholder="Job" name="job" 
                                        @bind="contactInfo.JobTitle">
                                    <span class="icon is-small is-left">
                                        <img src="icons/briefcase.svg">
                                    </span>
                                </div>
                            </div>
                        </div>
                    </div>

                    <div class="field is-horizontal">
                        <div class="field-label is-normal">
                            <label class="label">Contact</label>
                        </div>
                        <div class="field-body">
                            <div class="field">
                                <div class="control has-icons-left">
                                    <input class="input" type="email" placeholder="Email" name="email" 
                                        @bind="contactInfo.Email">
                                    <span class="icon is-small is-left">
                                        <img src="icons/at-sign.svg">
                                    </span>
                                </div>
                            </div>

                            <div class="field">
                                <div class="control has-icons-left">
                                    <input class="input" type="text" placeholder="Phone" name="phone" 
                                        @bind="contactInfo.Phone">
                                    <span class="icon is-small is-left">
                                        <img src="icons/phone.svg">
                                    </span>
                                </div>
                            </div>
                        </div>
                    </div>

                    <div class="field is-horizontal">
                        <div class="field-label"></div>
                        <div class="field-body">
                            <div class="field">
                                <div class="control">
                                    <button class="button is-fullwidth" @onclick="GenerateQRCode">
                                        <span class="icon">
                                            <img src="icons/send.svg">
                                        </span>
                                        <span>Generate @contactInfo.Company</span>
                                    </button>
                                </div>
                                @if (!string.IsNullOrEmpty(qrCodeImage))
                                {
                                    <div class="card-image is-flex is-justify-content-center">
                                        <img src="@qrCodeImage" alt="QR Code" width="192">
                                    </div>

                                    <div class="field is-horizontal">
                                        <div class="field-body">
                                            <div class="field">
                                                <div class="control is-centered">
                                                    <button @onclick="AddToGoogleWallet" style="display: contents;">
                                                        <span class="image">
                                                            <img src="icons/enUS_add_to_google_wallet_add-wallet-badge.svg" style="height: 50px;">
                                                        </span>
                                                    </button>
                                                </div>
                                            </div>
                                            <div class="field">
                                                <div class="control is-centered">
                                                    <button @onclick="AddToAppleWallet" style="display: contents;">
                                                        <span class="image">
                                                            <img src="icons/enUS_add_to_apple_wallet.svg" style="height: 50px;">
                                                        </span>
                                                    </button>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                }
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

</section>


@code {
    private ContactInfo contactInfo = new ContactInfo(); // Change to use ContactInfo class
    private string qrCodeImage = "";
    private string errorMessage = "";

    [Inject]
    private NavigationManager NavigationManager { get; set; }

    // Generate QR Code  
    private void GenerateQRCode()
    {
        // validate that all fields have been filled in
        if (string.IsNullOrEmpty(contactInfo.FirstName) ||
            string.IsNullOrEmpty(contactInfo.LastName) ||
            string.IsNullOrEmpty(contactInfo.Company) ||
            string.IsNullOrEmpty(contactInfo.JobTitle) ||
            string.IsNullOrEmpty(contactInfo.Email) ||
            string.IsNullOrEmpty(contactInfo.Phone))
            {
                errorMessage = "Please fill in all fields";
                qrCodeImage = ""; // hide the QR code from showing, in case it is already showing
                return;
            }

        // generate the QR code
        try
        {
            qrCodeImage = QRCodeService.GenerateVCardQRCode(contactInfo); // Change to use ContactInfo class
        }
        catch (Exception ex)
        {
            errorMessage = $"Error generating QR code: {ex.Message}";
            qrCodeImage = ""; // hide the QR code from showing, in case it is already showing
        }
    }

    // Add to Google Wallet
    private void AddToGoogleWallet()
    {
        string googleWalletUrl = "";
        try
        {
            // Obtained from the Google Pay & Wallet console
            // TODO: Retrieve from config
            string issuerId = "3388000000022799184"; 
            // Definition of the class of pass, consistent across all generated pass objects
            // TODO: Retrieve from config
            string classSuffix = "business-card"; 
            // A unique identifier for the pass object ... in our case it would be the service principal name of the currently logged in user
            // TODO: Retrieve from logged in user
            string objectSuffix = "nabeelp";

            // Get the Google Add To Wallet link
            GoogleWalletPassService googleWalletPassService = new GoogleWalletPassService();
            googleWalletUrl = googleWalletPassService.GetAddToWalletLink(issuerId, classSuffix, objectSuffix, contactInfo);

            // Go to the URL
            NavigationManager.NavigateTo(googleWalletUrl, forceLoad: true);
        }
        catch (Exception ex)
        {
            errorMessage = $"Error adding to Google Wallet: {ex.Message}";
            qrCodeImage = ""; // hide the QR code from showing, in case it is already showing
        }
    }

    private async Task AddToAppleWallet()
    {
        try
        {
            ApplePassService applePassService = new ApplePassService();
            // Generate the pass file and return the signed JWT object
            var passBytes = await applePassService.GenerateApplePass(contactInfo);
            var fileName = "BusinessCard.pkpass";
            var contentType = "application/vnd.apple.pkpass";
            // Logic to prompt the user to download the pass file
            await using var stream = new MemoryStream(passBytes);
            var fileContent = new StreamContent(stream);

            NavigationManager.NavigateTo($"download/{fileName}");
            // Alternatively, implement a file download mechanism suitable for your application
        }
        catch (Exception ex)
        {
            errorMessage = $"Error generating Apple Pass: {ex.Message}";
            qrCodeImage = ""; // hide the QR code from showing, in case it is already showing
        }
    }

    private void ClearError()
    {
        errorMessage = "";
    }
}
